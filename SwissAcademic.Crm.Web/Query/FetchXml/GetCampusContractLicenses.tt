<#@ template debug="false" hostspecific="false" language="C#" linePragmas="false" #>
<fetch distinct="true" no-lock="true" mapping="logical">
  <entity name="new_citavilicense">
    <# foreach(Enum item in EntityPropertySets.GetFullPropertySet(typeof(CitaviLicense)))
          {#>
              
                    <attribute name="<#= EntityNameResolver.ResolveAttributeName(CrmEntityNames.License, item.ToString())  #>" />
                      <#}
         #>
    <attribute name="new_voucherid" />
    <filter type="and">
	  <filter type="or" hint="union">
		<condition attribute="new_key" operator="eq" value="<#Write(CampusContractKey);#>" entityname="<#= FetchXmlConstants.LicenseCampusContractAliasName #>" />
	  </filter>
	  <filter type="and">
		 <condition attribute="statuscode" operator="eq" value="1"/>  
	  </filter>
    </filter>
    <link-entity name="contact" to="new_enduserid" from="contactid" link-type="outer" alias="<#= FetchXmlConstants.ContactLicenseEndUserAliasName #>">
      <attribute name="new_key" />
	  <attribute name="firstname" />
	  <attribute name="lastname" />
	  <attribute name="new_isverified" />
	  <attribute name="new_crm4id" />
	  <attribute name="contactid" />
    </link-entity>
	<link-entity name="contact" to="new_contactid" from="contactid" link-type="outer" alias="<#= FetchXmlConstants.ContactLicenseOwnerAliasName #>">
      <# foreach(Enum item in EntityPropertySets.GetFullPropertySet(typeof(Contact)))
          {#>
                    <attribute name="<#= EntityNameResolver.ResolveAttributeName(CrmEntityNames.Contact, item.ToString())  #>" />
                      <#}
         #>
	  <attribute name="contactid" />
	  
	  <link-entity name="new_linkedemailaccount" to="contactid" from="new_contact_new_linkedemail_lookup" link-type="outer" alias="contact_linkedemailaccount.new_linkedemailaccount">
      <# foreach(Enum item in EntityPropertySets.GetFullPropertySet(typeof(LinkedEmailAccount)))
          {#>
                    <attribute name="<#= EntityNameResolver.ResolveAttributeName(CrmEntityNames.LinkedEmailAccount, item.ToString())  #>" />
                      <#}
         #>
      <attribute name="statuscode" />
       <filter>
	        <condition attribute="statuscode" operator="eq" value="1"/>  
       </filter>                        
    </link-entity>
    </link-entity>
    <link-entity name="new_citaviproduct" to="new_citaviproductid" from="new_citaviproductid" link-type="outer" alias="<#= FetchXmlConstants.ProductLicenseAliasName #>">
      <attribute name="new_key" />
    </link-entity>
	<link-entity name="new_pricing" to="new_pricingid" from="new_pricingid" link-type="outer" alias="<#= FetchXmlConstants.PricingLicenseAliasName #>">
      <attribute name="new_key" />
    </link-entity>
	<link-entity name="new_licensetyp" to="new_licensetypid" from="new_licensetypid" link-type="outer" alias="<#= FetchXmlConstants.LicenseTypeLicenseAliasName #>">
      <attribute name="new_key" />
    </link-entity>
	<link-entity name="new_campuscontract" to="new_campuscontractid" from="new_campuscontractid" link-type="outer" alias="<#= FetchXmlConstants.LicenseCampusContractAliasName #>">
      <attribute name="new_key" />
    </link-entity>
  </entity>
</fetch>