<fetch distinct="false" no-lock="true" mapping="logical">
    <entity name="new_campuscontract">
      <# foreach(Enum item in EntityPropertySets.GetFullPropertySet(typeof(CampusContract)))
          {#>
                    <attribute name="<#Write(EntityNameResolver.ResolveAttributeName(CrmEntityNames.CampusContract, item.ToString()));#>" />
                      <#}
         #>
        <filter type="and">
        <condition attribute="new_contractduration" operator="ge" value="<#Write(ContractDuration);#>" />
        <condition attribute="new_contractreceived" operator="eq" value="1" />
        <condition attribute="statuscode" operator="eq" value="1" />
      </filter>
      <link-entity name="account" to="new_accountid" from="accountid" link-type="outer" alias="account_campuscontract.account">
        <attribute name="accountid" />
        <attribute name="address1_city" />
        <attribute name="new_campuscities" />
				<attribute name="new_datacenter" />
        <attribute name="new_key" />
        <attribute name="name" />
        <link-entity name="new_emaildomainorcampusname" to="accountid" from="new_accountid" link-type="outer" alias="account_emaildomainorcampusname.new_emaildomainorcampusname">
          <attribute name="new_key" />
          <attribute name="new_email_domain_or_campus_name" />
          <attribute name="new_organizationname" />
          <attribute name="statuscode" />
          <attribute name="new_emaildomainorcampusnameid" />
        </link-entity>
      </link-entity>
												<link-entity name="new_campuscontract_n_citaviproduct" to="new_campuscontractid" from="new_campuscontractid" link-type="outer" alias="new_campuscontract_n_citaviproduct.new_citaviproduct">
													<attribute name="new_citaviproductid" />
												</link-entity>                  
    </entity>
  </fetch>