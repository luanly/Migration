//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SwissAcademic.Resources {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class CodeResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CodeResources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SwissAcademic.Resources.zzNotTranslated.CodeResources", typeof(CodeResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {\rtf1\ansi\ansicpg1252\deff0\deflang2055{\fonttbl{\f0\fswiss\fprq2\fcharset0 Segoe UI;}{\f1\froman\fprq2\fcharset0 Times New Roman;}{\f2\fnil\fcharset0 Calibri;}}
        ///{\colortbl ;\red225\green0\blue0;\red255\green136\blue17;\red0\green0\blue0;\red0\green0\blue255;\red128\green128\blue128;}
        ///{\*\generator Msftedit 5.41.21.2510;}\viewkind4\uc1\pard\nowidctlpar\ri300\sa80\sl264\slmult1\cf1\lang1033\f0\fs18 Name of Style\cf2\f1\par
        ///\pard\nowidctlpar\cf3\b\f0 Distinctive Feature:\f1\par
        ///\cf0\b0\f0 The bibliograp [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string CitationStyleHelpContextTemplate {
            get {
                return ResourceManager.GetString("CitationStyleHelpContextTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (Freigeschaltet bis|Expiration date|Activated until|Válida hasta|Date d&apos;expiration|Activé jusqu&apos;au|Attivo fino a|Data waznosci|Aktywny do|Ativado até) ähnelt.
        /// </summary>
        public static string LicenseKeyDialog_ClipboardParser_ExpiryDate {
            get {
                return ResourceManager.GetString("LicenseKeyDialog_ClipboardParser_ExpiryDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (Lizenzschlüssel|License key|Clave de licencia|Clé de licence|Chiave di licenza|Klucz licencji|Chave de licença) ähnelt.
        /// </summary>
        public static string LicenseKeyDialog_ClipboardParser_Key {
            get {
                return ResourceManager.GetString("LicenseKeyDialog_ClipboardParser_Key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (Organisation|Organization|Organización|Organizzazione|Instytucja|Organização) ähnelt.
        /// </summary>
        public static string LicenseKeyDialog_ClipboardParser_Organisation {
            get {
                return ResourceManager.GetString("LicenseKeyDialog_ClipboardParser_Organisation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (Benutzername|User name|Nombre de usuario|Nom d&apos;utilisateur|Nome utente|Nazwa uzytkownika|Nome de usuário) ähnelt.
        /// </summary>
        public static string LicenseKeyDialog_ClipboardParser_Username {
            get {
                return ResourceManager.GetString("LicenseKeyDialog_ClipboardParser_Username", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die using System.Linq;
        ///using System.Collections.Generic;
        ///using SwissAcademic.Citavi;
        ///using SwissAcademic.Citavi.Metadata;
        ///using SwissAcademic.Collections;
        ///using SwissAcademic.Drawing;
        ///
        ///namespace SwissAcademic.Citavi.Citations
        ///{
        ///	public class ComponentPartFilter
        ///		:
        ///		IComponentPartFilter
        ///	{
        ///		public IEnumerable&lt;ITextUnit&gt; GetTextUnits(ComponentPart componentPart, Template template, Citation citation, out bool handled)
        ///		{
        ///			//return handled = true if this macro generates the output (as an IEnume [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string MacroEditor_CodeTemplate_ComponentPartFilter {
            get {
                return ResourceManager.GetString("MacroEditor_CodeTemplate_ComponentPartFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die using System;
        ///using System.Linq;
        ///using System.Collections.Generic;
        ///using System.ComponentModel;
        ///using SwissAcademic.Citavi;
        ///using SwissAcademic.Citavi.Citations;
        ///using SwissAcademic.Citavi.Metadata;
        ///using SwissAcademic.Collections;
        ///
        ///namespace SwissAcademic.Citavi.Comparers
        ///{
        ///	public class CustomCitationComparer
        ///		:
        ///		ICustomCitationComparerMacro
        ///	{
        ///		public int Compare(Citation x, Citation y)
        ///		{
        ///			/*
        ///				This is an example of a custom sort macro that sorts all references of type &apos;interne [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string MacroEditor_CodeTemplate_CustomCitationComparer {
            get {
                return ResourceManager.GetString("MacroEditor_CodeTemplate_CustomCitationComparer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die using System;
        ///using System.Linq;
        ///using System.Collections.Generic;
        ///using SwissAcademic.Citavi;
        ///using SwissAcademic.Citavi.Metadata;
        ///using SwissAcademic.Collections;
        ///
        ///namespace SwissAcademic.Citavi.Citations
        ///{
        ///	public class CustomTemplateCondition
        ///		:
        ///		ITemplateConditionMacro
        ///	{
        ///		public bool IsTemplateForReference(ConditionalTemplate template, Citation citation)
        ///		{
        ///			if (citation == null) return false;
        ///			if (citation.Reference == null) return false;
        ///			
        ///			//add macro code here
        ///			ret [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string MacroEditor_CodeTemplate_CustomTemplateCondition {
            get {
                return ResourceManager.GetString("MacroEditor_CodeTemplate_CustomTemplateCondition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die using System;
        ///using System.Linq;
        ///using System.ComponentModel;
        ///using System.Collections.Generic;
        ///using System.Threading;
        ///using System.Threading.Tasks;
        ///using System.Windows.Forms;
        ///
        ///using SwissAcademic.Citavi;
        ///using SwissAcademic.Citavi.Metadata;
        ///using SwissAcademic.Citavi.Shell;
        ///using SwissAcademic.Collections;
        ///
        ///// Implementation of macro editor is preliminary and experimental.
        ///// The Citavi object model is subject to change in future version.
        ///
        ///public static class CitaviMacro
        ///{
        ///	public stati [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string MacroEditor_CodeTemplate_MacroExternal {
            get {
                return ResourceManager.GetString("MacroEditor_CodeTemplate_MacroExternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die using System;
        ///using System.Linq;
        ///using System.ComponentModel;
        ///using System.Collections.Generic;
        ///using System.Threading;
        ///using System.Threading.Tasks;
        ///using System.Windows.Forms;
        ///
        ///using SwissAcademic.Citavi;
        ///using SwissAcademic.Citavi.Metadata;
        ///using SwissAcademic.Citavi.Shell;
        ///using SwissAcademic.Collections;
        ///
        ///// Implementation of macro editor is preliminary and experimental.
        ///// The Citavi object model is subject to change in future version.
        ///
        ///public static class CitaviMacro
        ///{
        ///	public stati [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string MacroEditor_CodeTemplate_MacroInternal {
            get {
                return ResourceManager.GetString("MacroEditor_CodeTemplate_MacroInternal", resourceCulture);
            }
        }
    }
}
